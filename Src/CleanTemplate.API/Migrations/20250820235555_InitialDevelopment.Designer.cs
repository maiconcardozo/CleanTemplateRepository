// <auto-generated />
using System;
using CleanTemplate.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanTemplate.API.Migrations
{
    [DbContext(typeof(ApiContextDevelopment))]
    [Migration("20250820235555_InitialDevelopment")]
    partial class InitialDevelopment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.AccountClaimAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<int>("IdClaimAction")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdClaimAction");

                    b.ToTable("AccountClaimAction", (string)null);
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Action", (string)null);
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Claim", (string)null);
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.ClaimAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DtUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAction")
                        .HasColumnType("int");

                    b.Property<int>("IdClaim")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdAction");

                    b.HasIndex("IdClaim");

                    b.ToTable("ClaimAction", (string)null);
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.AccountClaimAction", b =>
                {
                    b.HasOne("CleanTemplate.Application.Domain.Implementation.Account", "Account")
                        .WithMany()
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanTemplate.Application.Domain.Implementation.ClaimAction", "ClaimAction")
                        .WithMany("LstAccountClaimAction")
                        .HasForeignKey("IdClaimAction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("ClaimAction");
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.ClaimAction", b =>
                {
                    b.HasOne("CleanTemplate.Application.Domain.Implementation.Action", "Action")
                        .WithMany("LstClaimAction")
                        .HasForeignKey("IdAction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanTemplate.Application.Domain.Implementation.Claim", "Claim")
                        .WithMany("LstClaimAction")
                        .HasForeignKey("IdClaim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.Action", b =>
                {
                    b.Navigation("LstClaimAction");
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.Claim", b =>
                {
                    b.Navigation("LstClaimAction");
                });

            modelBuilder.Entity("CleanTemplate.Application.Domain.Implementation.ClaimAction", b =>
                {
                    b.Navigation("LstAccountClaimAction");
                });
#pragma warning restore 612, 618
        }
    }
}
